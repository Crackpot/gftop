## coding=utf-8
控制结构


控制结构指的是控制程序流程的那些语法 — 条件（如 if/else），循环（如 while 和 for），以及 try/except 之类。
在 Mako 中，控制结构用 % 后附加常规 Python 控制结构的写法，并用另一个 % 语法 "end<name>" 结束语句块。其中 "<name>" 是该表达式的关键字：

用户：${unicode(name)}
name长度：${len(name)}
name转换成unicode格式的长度：${len(unicode(name))}
性别：${unicode(sex)}

% if sex==u'男':
	先生
% elif sex=='女':
	女士
% else:
	性别错误
% endif


％ 可以出现在一行里的任何位置，只要其前面没有其他文本；缩进是无所谓的。Python 中的所有“冒号”表达式在这里都完全支持，包括 if/elif/else, while, for 甚至 def，尽管 Mako 有其内建的功能更强大的 def 标签。

% for a in ['one','two','three','four','five']:
    % if a[0]=='t':
it's two or three
    % elif a[0]=='f':
it's four or five
    % else:
it's one
    % endif
% endfor
\
##这是一个注释
<%doc>
	这里是注释
	更多注释
</%doc>
\
换行过滤器(Newline Filters)
反斜线 ("\") 字符放在任意一行的后面，会吃掉一个换行符。
here is a line that goes onto \
another line.

Python 语句块
任意 python 语句块都可以用 <% %> 标签来定义：
this is a template
<%
	x=[i*3 for i in range(0,9,2)]
%>
% for item in x:
${item} \
% endfor

在 <％ ％> 内定义的 python 代码，其整体的缩进量是不重要的，但是他们内部的语句之间必须有正确的缩进层次（因为这里没法使用 end），Mako 的编译器会调整 python 语句块的缩进层次与其周围的其他生成的 Python 代码相配合。