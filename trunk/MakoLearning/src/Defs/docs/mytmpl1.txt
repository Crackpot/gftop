##coding=utf-8
\
<%def name="hello()">
helloworld
</%def>\
the def: ${hello()}
如果 <％def> 没有嵌套定义在另一个 <％def> 中，则称为顶层的 def, 它可以在模板的任何地方被使用，甚至可以在定义它的位置之前。
所有的 defs, 不管是不是顶层的，都可以访问当前的上下文名称空间，和模板的访问权限完全一样。设想下列模板在执行时被指定了一个包含 username 和 accountdata 变量的上下文：
Hello ${username},how are you? Lets see what your account says:\
${account()}\
<%def name="account()">
	Account for ${username}:\
	<%
		accountdata={'1':'one','2':'two',}
	%>
	% for row in accountdata:
		Value:${row}<br/>
	% endfor
</%def>\
username 和 accountdata 两个变量将会显示在主模板的 body 中，同样也会显示在 account() def 的 body 中。

既然 defs 不过就是 python 函数，你自然也能够定义和传递参数了:
${account1(accountname='crackpot')}\
<%def name="account1(accountname,type='regular')">\
	account name:${accountname},type ${type}
</%def>
当你为 def 定义参数时，他们需要遵从 Python 的规定（比如，除了提供了默认值的关键字参数之外的所有参数，都需要提供）。这和上下文层次的变量不同，后者对不存在的名称会估算为 UNDEFINED 而不是出错。
从其他文件调用 defs

顶层的 <％defs> 被编译到模板对应的模块中，并且可以被从外部调用；包括从其他模板，或是普通的 Python 代码来调用。从其他模板中调用 <％def> 有点像使用 <％include> —— 差别在于，你是在调用模板中的一个函数，而不是整个模板。

远程的 <％def> 调用也有点类似于 Python 中调用另一个模块中的函数的情形。需要有一个“导入”的步骤，以便从其他模板中萃取出名称，添加到你自己的模板中；然后这些名称的函数才可以被调用。

要导入另一个模板，使用 <％namespace> 标签:\
<%namespace name="mystuff" file="mystuff.html"/>\
${mystuff.func()}